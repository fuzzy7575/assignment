<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mapper namespace 설정-->
<mapper namespace="com.management.category.model.dao.CategoryDAO">

    <!-- resultMap 설정 -->
    <resultMap id="categoryResultMap" type="CategoryDTO">
        <id property="categoryCode" column="CATEGORY_CODE"/>
        <result property="categoryName" column="CATEGORY_NAME"/>
    </resultMap>

    <!-- 조건에 따른 제품분류 목록을 조회하는 쿼리 -->
    <select id="selectCategoryList" parameterType="hashmap" resultMap="categoryResultMap">
        SELECT
            A.CATEGORY_CODE
            , A.CATEGORY_NAME
        FROM
            PRODUCT_CATEGORY A
        <if test="option == 'allList'">
            ORDER BY A.CATEGORY_CODE
        </if>
        <if test="option == 'orderList'">
            JOIN PRODUCT_INFO B ON (A.CATEGORY_CODE = B.CATEGORY_CODE)
            WHERE SALES_QUANTITY > 0
            GROUP BY CATEGORY_CODE
            ORDER BY COUNT(A.CATEGORY_CODE) DESC
        </if>
    </select>

    <!-- 제품분류를 등록하는 코드 -->
    <insert id="insertCategory" parameterType="CategoryDTO">
        INSERT INTO PRODUCT_CATEGORY (
            CATEGORY_NAME
        )
        VALUES (
            #{ categoryName }
        )
    </insert>


    <!-- 제품분류명을 수정하는 코드 -->
    <update id="updateCategory" parameterType="CategoryDTO">
        UPDATE PRODUCT_CATEGORY
            SET CATEGORY_NAME = #{ categoryName }
        WHERE CATEGORY_CODE = #{ categoryCode }
    </update>

    <!-- 제품분류를 삭제하는 코드 -->
    <delete id="deleteCategory" parameterType="hashmap">
        DELETE
        FROM PRODUCT_CATEGORY
        WHERE CATEGORY_CODE = #{ categoryCode }
    </delete>

</mapper>
